---
layout:		post
category:	hacking
title:		PHP远程包含与XSS的结合之旅
desc:		在一次测试中发现一个比较经典的例子，需要两次漏洞的结合才能完美地利用。
tags:		[php rfi,php xss,PHP远程包含]
---
#### 前言
之前碰到过一个经典的例子，目标有注入，但是没后台，权限很低，而且目标的目录也没权限写。唯一最大的利用点是`load_file`。    
于是慢慢读取文件进行代码审计，发现原来站点里的文章都是直接把PHP代码保存带数据库然后读取出来`eval`的，这下就太棒了，于是赶紧找一个`update`或`insert`注入的文件，把要执行的PHP代码通过注入写入数据库，然后再在前台访问指定的文章，成功进入。    
之所以说这是一个经典的例子，是因为这次的测试中，每个小漏洞都缺一不可，先通过`select`注入获取代码进行审计，然后找到`update`注入进行恶意代码插入，最后完美执行我们的代码。

#### 再遇
多年后，再次碰到了一个同样经典的例子，决定记一下。    
目标情况是这样，发现了一个`rfi`远程文件包含漏洞，但是，仅仅只允许包含本站的URL路径。地址类似于：
```
http://x.com/x.php?file=http://x.com/o.php
```
而且又没有用户注册，没有上传。也许有的读者会和我一样奇怪，既然无法远程包含其他URL地址，为什么不直接设计成本地包含的模式呢？？我也想不通，可能作者太奇葩了吧。。。    
针对这种情况，如何继续？？

#### 转换
找了几个目标站点的图片文件测试是否为真正的文件包含漏洞，发现确实存在。这时候呢，就突然想到了，他要包含，必定会执行页面中的PHP代码，而我们只需要找到一个`XSS`，在页面中输出我们的PHP代码，岂不是可以直接执行了？    
想到这，立马找了几个页面测试，最终找到了一个反射型xss漏洞，于是乎把URL地址编码，最终生成如下地址：
```
http://x.com/x.php?file=http%3A%2F%2Fx.com%2Fs.php%3Fq%3D%3C%3Fphp%20phpinfo()%3B%3F%3E
```
OK，成功执行。

#### 总结
其实也不知道这有什么好记录的，毕竟看着就没什么技术难度。但是其中的多漏洞结合思维方式，应该值得学习分享！