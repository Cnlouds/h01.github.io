<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Hotes</title>
		<atom:link href="http://ursb.org/feed.xml" rel="self" type="application/rss+xml" />
		<link>http://ursb.org</link>
		<lastBuildDate>Mon, 17 Nov 2014 17:34:29 +0800</lastBuildDate>
		<language>zh-CN</language>
		<generator>root@ursb.org</generator>
		
		<item>
			<title>更准确高效地获取客户端浏览器|系统信息</title>
			<link>http://ursb.org/javascript/2014/11/13/get-client-info.html</link>
			<pubDate>Thu, 13 Nov 2014 00:00:00 +0800</pubDate>
			<category>Javascript,xss,js-getClientInfo,js获取客户端信息,js获取浏览器版本,js获取操作系统版本</category>
			<description>如何使用js来获取客户端所使用的浏览器版本，操作系统版本以及其他详细的信息？那些过时的就算了，也许这篇文章能给你启发 :)</description>
		</item>
		
		<item>
			<title>xss中使用js扫描外|内网端口</title>
			<link>http://ursb.org/hacking/2014/11/12/xss-scanPorts.html</link>
			<pubDate>Wed, 12 Nov 2014 00:00:00 +0800</pubDate>
			<category>xss,javascript扫描端口,xss扫描端口</category>
			<description>在xss攻击中，为了更深一步探测信息，可以尝试着获取一下内网IP段，然后进行端口扫描。当然，神马中间人攻击、跳板exp的这里就不说了。</description>
		</item>
		
		<item>
			<title>使用JSONP攻击探测目标用户信息</title>
			<link>http://ursb.org/hacking/2014/11/10/jsonp-getuserinfo.html</link>
			<pubDate>Mon, 10 Nov 2014 00:00:00 +0800</pubDate>
			<category>jsonp,xss,xss-jsonp,jsonp攻击,探测信息</category>
			<description>jsonp攻击已经算是很成熟了，出来了应该很久，但是知道的人也许并不是很多。这个玩意能做什么呢？也许你能让TA发挥更强大！</description>
		</item>
		
		<item>
			<title>BootStrap.ContextMenu 网页右键菜单插件</title>
			<link>http://ursb.org/bootstrap/2014/11/09/contextmenu.html</link>
			<pubDate>Sun, 09 Nov 2014 00:00:00 +0800</pubDate>
			<category>Bootstrap,bootstrap.contextmenu,bootstrap Table,contextmenu右键菜单</category>
			<description>基于bootstrap(v.3.2.0)写了个右键菜单的小&quot;插件&quot;，这里简单介绍下使用方法。</description>
		</item>
		
		<item>
			<title>Jekyll生成Json数据</title>
			<link>http://ursb.org/jekyll/2014/11/07/genJson.html</link>
			<pubDate>Fri, 07 Nov 2014 00:00:00 +0800</pubDate>
			<category>Jekyll,Jekyll 2 Json,Jekyll生成Json</category>
			<description>简记如何使用Jekyll生成Json，以及如何处理一些小问题</description>
		</item>
		
		<item>
			<title>Web Worker简单使用</title>
			<link>http://ursb.org/javascript/2014/11/06/Worker.html</link>
			<pubDate>Thu, 06 Nov 2014 00:00:00 +0800</pubDate>
			<category>Javascript,Web Worker,html5 worker,Javascript Worker使用</category>
			<description>当在 HTML 页面中执行脚本时，页面的状态是不可响应的，直到脚本已完成。web worker 是运行在后台的 JavaScript，独立于其他脚本，不会影响页面的性能。</description>
		</item>
		
		<item>
			<title>socket.io的简单使用</title>
			<link>http://ursb.org/nodejs/2014/11/04/socket.io.html</link>
			<pubDate>Tue, 04 Nov 2014 00:00:00 +0800</pubDate>
			<category>Javascript,socket.io,socket.io.js使用,node.js Websocket</category>
			<description>socket.io 是一个为实时应用提供跨平台实时通信的库。简记如何与Node.js完美搭配使用</description>
		</item>
		
		<item>
			<title>Node.js连接操作MySql</title>
			<link>http://ursb.org/nodejs/2014/11/04/mysql.html</link>
			<pubDate>Tue, 04 Nov 2014 00:00:00 +0800</pubDate>
			<category>Node.js,Node.js操作mysql</category>
			<description>简记如何使用Node.js连接MySql并进行执行语句操作</description>
		</item>
		
		<item>
			<title>Javascript同步加载js文件</title>
			<link>http://ursb.org/javascript/2014/11/04/loadScript.html</link>
			<pubDate>Tue, 04 Nov 2014 00:00:00 +0800</pubDate>
			<category>Javascript,loadScript,同步加载js文件</category>
			<description>页面中的js并不是同步加载的，这就会导致如果几个js文件是互为牵制的话，可能会造成有未读取到的js没有及时生成元素而报错的问题</description>
		</item>
		
		<item>
			<title>Chrome扩展开发之扩展与应用管理</title>
			<link>http://ursb.org/chrome/2014/10/27/chrome.management.html</link>
			<pubDate>Mon, 27 Oct 2014 00:00:00 +0800</pubDate>
			<category>Chrome,Chrome扩展开发,Chrome插件管理,Chrome扩展管理,Chrome.management</category>
			<description>通过Chrome的management接口来完成用户已安装的扩展和应用管理。</description>
		</item>
		
	</channel>
</rss>